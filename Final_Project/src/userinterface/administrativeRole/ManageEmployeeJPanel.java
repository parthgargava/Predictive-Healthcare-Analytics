/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.administrativeRole;

import business.employee.Employee;
import business.enterprise.Enterprise;
import business.organization.Organization;
import utilities.validation.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Parth, Nikhil, Praneeth
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;

        populateOrganizationJComboBox();
    }

    public void populateOrganizationJComboBox() {
        organizationJComboBox.removeAllItems();
        newOrganizationJComboBox.removeAllItems();

        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Government)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getGovernmentOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
                newOrganizationJComboBox.addItem(organization);
            }
        } 
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Medical)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getHospitalOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
                newOrganizationJComboBox.addItem(organization);
            }
            for (Organization organization : enterprise.getOrganizationDirectory().getLabOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
                newOrganizationJComboBox.addItem(organization);
            }
        } 
       
    }

    public void populateEmployeeJTable(Organization organization) {
        DefaultTableModel dtm = (DefaultTableModel) employeeJTable.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[2];

        for (Employee employee : organization.getEmployeeDirectory().getEmployeeDirectory()) {
            row[0] = employee.getId();
            row[1] = employee.getName();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        organizationJLabel = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        createANewEmployeeJLabel = new javax.swing.JLabel();
        newOrganizationJLabel = new javax.swing.JLabel();
        newOrganizationJComboBox = new javax.swing.JComboBox();
        employeeNameJLabel = new javax.swing.JLabel();
        employeeNameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< HEAD BACK TO PREVIOUS PAGE");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPLOYEE ID", "EMPLOYEE NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeJTable);

        organizationJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        organizationJLabel.setForeground(new java.awt.Color(255, 255, 255));
        organizationJLabel.setText("ORGANIZATION NAME:");

        organizationJComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        createANewEmployeeJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        createANewEmployeeJLabel.setForeground(new java.awt.Color(255, 255, 255));
        createANewEmployeeJLabel.setText("CREATE A NEW EMPLOYEE:");

        newOrganizationJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newOrganizationJLabel.setText("ORGANIZATION NAME:");

        employeeNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        employeeNameJLabel.setText("EMPLOYEE NAME:");

        submitJButton.setBackground(new java.awt.Color(0, 0, 0));
        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("SUBMIT");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(employeeNameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(newOrganizationJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(newOrganizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(organizationJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)
                                .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton)
                            .addComponent(createANewEmployeeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(createANewEmployeeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newOrganizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newOrganizationJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(employeeNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed



        // TODO add your handling code here:
        Organization organization = (Organization) newOrganizationJComboBox.getSelectedItem();
        String name = employeeNameJTextField.getText();
      
        Validation v = new Validation();
        String blank = "";
        if (name.equals(blank)) {
            JOptionPane.showMessageDialog(null, "Any field can not be empty");
        } 
        
        
        else if(!v.alphabetCheck(name))
        {
            
             JOptionPane.showMessageDialog(null, "Employee Name can only be alphabets");
             employeeNameJTextField.setBackground(Color.yellow);
        }
        else{
        organization.getEmployeeDirectory().createAnEmployee(name);
        if (organization.equals(organizationJComboBox.getSelectedItem())) {
            populateEmployeeJTable(organization);
        }
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        populateEmployeeJTable(organization);
    }//GEN-LAST:event_organizationJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel createANewEmployeeJLabel;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JLabel employeeNameJLabel;
    private javax.swing.JTextField employeeNameJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox newOrganizationJComboBox;
    private javax.swing.JLabel newOrganizationJLabel;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JLabel organizationJLabel;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
