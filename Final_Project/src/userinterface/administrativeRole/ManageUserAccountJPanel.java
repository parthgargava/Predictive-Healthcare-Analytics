/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.administrativeRole;

import business.employee.Employee;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.role.Role;
import business.useraccount.UserAccount;
import utilities.validation.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Parth, Nikhil, Praneeth
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageUserAccountJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateUserAccountJTable();
        populateOrganizationJComboBox();
    }

    public void populateUserAccountJTable() {
        DefaultTableModel dtm = (DefaultTableModel) userAccountsJTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[3];

        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Government)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getGovernmentOrganizationDirectory()) {
                for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountDirectory()) {
                    row[0] = userAccount.getUserID();
                    row[1] = userAccount.getUserName();
                    row[2] = userAccount.getRole();
                    dtm.addRow(row);
                }
            }
        } 
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Medical)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getHospitalOrganizationDirectory()) {
                for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountDirectory()) {
                    row[0] = userAccount.getUserID();
                    row[1] = userAccount.getUserName();
                    row[2] = userAccount.getRole();
                    dtm.addRow(row);
                }
            }
        } 
        
//        else {
//            for (Organization organization : enterprise.getOrganizationDirectory().getNgoOrganizationDirectory()) {
//                for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountDirectory()) {
//                    row[0] = userAccount.getUserID();
//                    row[1] = userAccount.getUserName();
//                    row[2] = userAccount.getRole();
//                    dtm.addRow(row);
//                }
//            }
//        }

    }

    public void populateOrganizationJComboBox() {
        organizationJComboBox.removeAllItems();

        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Government)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getGovernmentOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
            }
        }
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Medical)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getHospitalOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
            }
        }
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Medical)) {
            for (Organization organization : enterprise.getOrganizationDirectory().getLabOrganizationDirectory()) {
                organizationJComboBox.addItem(organization);
            }
        }
        

    }

    public void populateEmployeeJComboBox(Organization organization) {
        employeeJComboBox.removeAllItems();

        for (Employee employee : organization.getEmployeeDirectory().getEmployeeDirectory()) {
            employeeJComboBox.addItem(employee);
        }
    }

    public void populateRoleJComboBox(Organization organization) {
        roleJComboBox.removeAllItems();

        for (Role role : organization.getSupportedRole()) {
            roleJComboBox.addItem(role);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountsJTable = new javax.swing.JTable();
        createANewUserJLabel = new javax.swing.JLabel();
        organizationJLabel = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        userNameJTextField = new javax.swing.JTextField();
        roleJLabel = new javax.swing.JLabel();
        userNameJLabel = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        passwordJLabel = new javax.swing.JLabel();
        employeeJLabel = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        paswwordjPasswordField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(102, 102, 102));

        backJButton.setBackground(new java.awt.Color(0, 0, 0));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        userAccountsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USER ID", "USER NAME", "ROLE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccountsJTable);

        createANewUserJLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createANewUserJLabel.setForeground(new java.awt.Color(255, 255, 255));
        createANewUserJLabel.setText("CREATE A NEW USER:");

        organizationJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        organizationJLabel.setForeground(new java.awt.Color(255, 255, 255));
        organizationJLabel.setText("Organization");

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        roleJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        roleJLabel.setForeground(new java.awt.Color(255, 255, 255));
        roleJLabel.setText("Role");

        userNameJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userNameJLabel.setForeground(new java.awt.Color(255, 255, 255));
        userNameJLabel.setText("User Name");

        passwordJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordJLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordJLabel.setText("Password");

        employeeJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        employeeJLabel.setForeground(new java.awt.Color(255, 255, 255));
        employeeJLabel.setText("Employee");

        submitJButton.setBackground(new java.awt.Color(0, 0, 0));
        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("SUBMIT");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createANewUserJLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(roleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(organizationJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(userNameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(passwordJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(paswwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(employeeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(employeeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createANewUserJLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationJLabel)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleJLabel)
                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameJLabel)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel)
                    .addComponent(paswwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        populateEmployeeJComboBox(organization);
        populateRoleJComboBox(organization);
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        Employee employee = (Employee) employeeJComboBox.getSelectedItem();
        Role role = (Role) roleJComboBox.getSelectedItem();

        String userName = userNameJTextField.getText();
        String password = String.valueOf(paswwordjPasswordField.getPassword());

Validation v = new Validation();
String blank = "";
        if (userName.equals(blank) || password.equals(blank)) {
            JOptionPane.showMessageDialog(null, "Any field can not be empty");
        } 
        
        
        else if(!v.alphabetCheck(userName))
        {
            
             JOptionPane.showMessageDialog(null, "UserName can only be alphabets");
             userNameJTextField.setBackground(Color.yellow);
        }

        else if(!v.alphaNumericCheck(password))
        {
             JOptionPane.showMessageDialog(null, "Password can only be alphabets and numbers");
             paswwordjPasswordField.setBackground(Color.yellow);
        }

        else{
        boolean isUnique = organization.getUserAccountDirectory().checkIfUserNameIsUnique(userName);

        if (isUnique) {
            organization.getUserAccountDirectory().addUserAccount(userName, password, role, employee);
            JOptionPane.showMessageDialog(this, "USER ACCOUNT CREATED SUCCESSFULLY", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            populateUserAccountJTable();
        } else {
            JOptionPane.showMessageDialog(this, "USERNAME MUST BE UNIQUE...PLEASE TRY A DIFFERENT ONE", "OOPS...", JOptionPane.WARNING_MESSAGE);
        }
        }
    }//GEN-LAST:event_submitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel createANewUserJLabel;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JLabel employeeJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JLabel organizationJLabel;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPasswordField paswwordjPasswordField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JLabel roleJLabel;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable userAccountsJTable;
    private javax.swing.JLabel userNameJLabel;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
